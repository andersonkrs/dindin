# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#

sqlite_defaults: &sqlite_defaults
  adapter: sqlite3
  # Solid queue takes two queries by default + number of queue threads
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 10 } %>
  timeout: 5000

development:
  primary:
    <<: *sqlite_defaults
    database: "storage/dindin_primary_development.sqlite3"
    migrations_paths: "db/migrate"
  ops:
    <<: *sqlite_defaults
    database: "storage/dindin_ops_development.sqlite3"
    migrations_paths: "db/ops/migrate"
  queues:
    <<: *sqlite_defaults
    database: "storage/dindin_queues_development.sqlite3"
    migrations_paths: "db/queues/migrate"

test:
  primary:
    <<: *sqlite_defaults
    database: "storage/dindin_primary_test.sqlite3"
    migrations_paths: "db/migrate"
  ops:
    <<: *sqlite_defaults
    database: "storage/dindin_ops_test.sqlite3"
    migrations_paths: "db/ops/migrate"
  queues:
    <<: *sqlite_defaults
    database: "storage/dindin_queues_test.sqlite3"
    migrations_paths: "db/queues/migrate"

production:
  primary:
    <<: *sqlite_defaults
    database: "storage/dindin_primary_production.sqlite3"
    migrations_paths: "db/migrate"
    pragmas:
      mmap_size: <%= 256.megabytes %>
  ops:
    <<: *sqlite_defaults
    database: "storage/dindin_ops_production.sqlite3"
    migrations_paths: "db/ops/migrate"
  queues:
    <<: *sqlite_defaults
    database: "storage/dindin_queues_production.sqlite3"
    migrations_paths: "db/queues/migrate"
