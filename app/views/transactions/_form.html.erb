<%# locals: (transaction:) -%>

<button data-action="transactions--dialog#close" class="group btn btn-md btn-circle btn-ghost absolute font-bold right-2 top-2 text-lg">âœ•</button>

<div class="card-body items-stretch px-1 py-1">
  <h1 class="card-title font-light text-2xl justify-center mb-2">
    <% if transaction.persisted? %>
      <%= "Edit #{transaction.model_name.human}" %>
    <% else %>
      <%= "New #{transaction.model_name.human}" %>
    <% end %>
  </h1>

  <%= form_with(
    model: transaction,
    data: {
      controller: "transactions--recurrence",
      action: "transactions--recurrence:toggle->transactions--dialog#recurrenceChanged",
      transactions__recurrence_toggle_class: "is-recurrent"
    },
    class: "group"
  ) do |form| %>
    <div class="flex flex-col gap-4">
      <%= form.label :value, class: "input input-lg flex items-center gap-2 w-full", data: { controller: "money-input" } do %>
        <%= icon "banknotes", class: "size-7 opacity-50 ml-2" %>

        <%= form.text_field(
          :value,
          inputmode: "numeric",
          maxlength: "21",
          required: true,
          placeholder: "Value",
          class: "grow font-semibold text-lg text-right",
          data: {
            "money-input-target": "input",
            action: "input->money-input#handleFormat focus->money-input#handleFocus click->money-input#handleFocus"
          }
        ) %>
    <% end %>

    <%= transaction_title_autocomplete(form, :title) %>

    <%= combobox_tag(
      form,
      :category_id,
      Category.expense.order(:title),
      id: "form-category-id-combobox",
      placeholder: _("Select a category"),
      icon: "chart-pie",
    ) do |category| %>
      <%= render "categories/icon", size: "sm", category: category %>
      <%= category.title %>
    <% end %>

    <%= combobox_tag(
      form,
      :account_id,
      Account.order(:title),
      id: "form-account-id-combobox",
      placeholder: _("Select an account"),
      icon: "credit-card",
    ) %>

    <div
      class="flex gap-1"
      data-controller="calendar"
      data-action="calendar:onchange->transactions--dialog#paidOnChanged">
      <%= form.label(
        :due_on,
        class: "input input-lg flex items-center gap-2 indicator w-full",
        data: { action: "click->calendar#toggle" }
      ) do %>
        <span class="indicator-item indicator-center badge">Due date</span>
        <%= icon "calendar-days", class: "size-7 opacity-50 ml-2" %>
        <%= form.text_field(
          :_due_on,
          required: true,
          readonly: true,
          class: "grow",
          data: { calendar_target: "maskedInput" },
          value: transaction.due_on
        ) %>
        <%= form.hidden_field(:due_on, data: { calendar_target: "input" }) %>
      <% end %>

      <calendar-date
        class="cally hidden bg-base-100 rounded-box shadow-lg"
        data-calendar-target="calendar"
        data-action="change->calendar#dateSelected" value="<%= transaction.due_on %>">
        <%= icon "arrow-left", class: "size-6", html: { slot: "previous", aria_label: "Previous" } %>
        <%= icon "arrow-right", class: "size-6", html: { slot: "next", aria_label: "Next" } %>
        <calendar-month></calendar-month>
      </calendar-date>

      <%= form.label :paid, class: "input input-lg flex-1 w-full swap swap-rotate input-ghost" do %>
        <%= form.check_box(
          :paid,
          checked: transaction.paid?,
          data: { transactions__dialog_target: "paidToggle" }
        ) %>
        <div class="swap-on">
          <%= icon "hand-thumb-up", class: "w-8 h-8 size-6 text-emerald-500" %>
        </div>
        <div class="swap-off">
          <%= icon "hand-thumb-down", class: "w-8 h-8 size-6 text-red-500" %>
        </div>
      <% end %>
    </div>

    <%= form.hidden_field(
      :_recurrent,
      value: false,
      data: { transactions__recurrence_target: "toggle" }
    ) %>

    <%= form.fields_for(:recurrence_attributes) do |recurrence_fields| %>
      <div class="hidden group-[.is-recurrent]:flex items-start gap-2 max-sm:text-lg text-xl rounded-xl p-1 hover:bg-[#0000000f] relative">
        <span class="label text-secondary ml-4 mt-[calc(var(--spacing)*2.5)] self-top">
          <%= icon "refresh-ccw", variant: :solid, class: "size-6" %>
        </span>

        <div class="flex items-center gap-1 flex-wrap grow">
          <%= recurrence_fields.select(
            :frequency,
            [["Monthly", "monthly"], ["Annually", "annually"]],
            { selected: "monthly" },
            {
              class: "underline decoration-2 underline-offset-2 min-h-10",
              data: {
                transactions__recurrence_target: "recurrenceFrequency",
              },
            }
          ) %>


          <%= recurrence_fields.select(
            :end_condition,
            [["Forever", "forever"], ["For...", "for"]],
            { selected: "monthly" },
            {
              class: "underline decoration-2 underline-offset-2",
              data: {
                transactions__recurrence_target: "endCondition",
                action: "input->transactions--recurrence#endConditionChanged:prevent",
              },
            }
          ) %>

          <%= recurrence_fields.label(:count, class: "input input-md hidden basis-2/3") do %>
            <%= recurrence_fields.number_field(
              :count,
              min: 1,
              max: 100,
              step: 1,
              class: "width-1/4",
              data: {
                transactions__recurrence_target: "count",
              }
            ) %>
            <span class="label">times</span>
          <% end %>
        </div>

        <button class="btn btn-circle btn-md btn-ghost self-center" data-action="transactions--recurrence#toggle:prevent">
          <%= icon "x-circle", class: "size-7 opacity-50" %>
        </button>
      </div>
    <% end %>

    <% if transaction.new_record? %>
      <div class="flex justify-start block group-[.is-recurrent]:hidden">
        <button class="btn btn-xs p-4" data-action="transactions--recurrence#toggle:prevent">
          <%= icon "refresh-ccw", variant: :solid, class: "size-4 opacity-50" %>
          <span class="text-gray-600">Recurrent</span>
        </button>
      </div>
    <% end %>

    <div class="card-actions flex justify-center items-center mt-2 relative">
      <%= form.button(nil, class: "btn btn-xl btn-success btn-circle btn-hover-scale-up") do %>
        <%= icon "check", class: "stroke-6" %>
      <% end %>

      <% if transaction.persisted? %>
        <%= link_to(
          transaction_path(transaction),
          class: "btn size-11 btn-error btn-circle btn-outline btn-hover-scale-up absolute right-0",
          data: { turbo_method: :delete }
        ) do %>
          <%= icon "trash" %>
        <% end %>
      <% end %>
    </div>
  <% end %>
</div>
